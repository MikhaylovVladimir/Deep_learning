# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IZWLshgnDVz4A42BE0kyaH8s9WeG1o-L
"""

import pandas as pd
import numpy as np
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import roc_auc_score

data_path = "./"
train = pd.read_csv(data_path + "train.csv")
test = pd.read_csv(data_path + "test.csv")

X = train.drop(columns=["id", "smoking"])
y = train["smoking"]

X_test = test.drop(columns=["id"])
id_test = test["id"]

scaler = StandardScaler()
X = scaler.fit_transform(X)
X_test = scaler.transform(X_test)
X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)

model = tf.keras.Sequential([
    tf.keras.layers.Dense(128, activation='relu', input_shape=(X_train.shape[1],)),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dropout(0.3),
    tf.keras.layers.Dense(32, activation='relu'),
    tf.keras.layers.Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=[tf.keras.metrics.AUC(name='auc')])

history = model.fit(
    X_train, y_train,
    validation_data=(X_val, y_val),
    epochs=20,
    batch_size=32,
    verbose=1
)

y_val_pred = model.predict(X_val).ravel()
val_auc = roc_auc_score(y_val, y_val_pred)
print("Validation ROC AUC", (val_auc))

y_test_pred = model.predict(X_test).ravel()

submission = pd.DataFrame({
    "id": id_test,
    "smoking": y_test_pred
})

submission.to_csv("submission.csv", index=False)